{
	"info": {
		"_postman_id": "23cf9d2a-0b9a-404d-9572-b3c4160cd44e",
		"name": "provateste",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8974591",
		"_collection_link": "https://speeding-star-372261.postman.co/workspace/book-api~791fd86a-1524-457e-8cac-b9478b35cff2/collection/8974591-23cf9d2a-0b9a-404d-9572-b3c4160cd44e?action=share&source=collection_link&creator=8974591"
	},
	"item": [
		{
			"name": "Buscar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"",
							"    const jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('email');",
							"    pm.expect(jsonData.data).to.have.property('last_name');",
							"    pm.expect(jsonData.data).to.have.property('avatar');",
							"    pm.expect(jsonData).to.have.property('support');",
							"    pm.expect(jsonData.support).to.have.property('url');",
							"    pm.expect(jsonData.support).to.have.property('text');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://reqres.in/api/users/2",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"CRIAR (CREATE) usuário\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"",
							"    const jsonData = pm.response.json();",
							"    ",
							"    pm.expect(jsonData).to.have.property('data');",
							"    pm.expect(jsonData.data).to.have.property('id');",
							"    pm.expect(jsonData.data).to.have.property('email');",
							"    pm.expect(jsonData.data).to.have.property('last_name');",
							"    pm.expect(jsonData.data).to.have.property('avatar');",
							"    pm.expect(jsonData).to.have.property('support');",
							"    pm.expect(jsonData.support).to.have.property('url');",
							"    pm.expect(jsonData.support).to.have.property('text');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Ticiana L.\",\n    \"job\": \"professor\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Registrar Usuário",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Código de resposta é 400 Bad Request\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"",
							"pm.test(\"Verificar mensagem de erro\", function () {",
							"    const jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData.error).to.eql(\"Note: Only defined users succeed registration\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"sydney@fife\",\n    \"password\" : \"1234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/register",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		}
	]
}